{
	"info": {
		"_postman_id": "a8c9a184-c480-4156-a81a-44dc13e4be77",
		"name": "ContactBookVelin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25603403"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "List all contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Check if response type is json\", function() {\r",
									"    pm.response.to.be.json;\r",
									"    const respBody = pm.response.json()\r",
									"    pm.expect(typeof(respBody)).to.be.equal(\"object\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get contact by keyword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"pm.test('The last name containst Jackson', () => {\r",
									"    _.each(jsonData.Fee, (item) => {\r",
									"        pm.expect(item.clientName).to.include('Jackson')\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/contacts/search/michael ",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contacts",
								"search",
								"michael "
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CREATE",
			"item": [
				{
					"name": "Create new contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if status code is 200\", function() {\r",
									"    pm.expect(pm.response.code, \"Status code property\").to.be.oneOf([201, 202])\r",
									"\r",
									"    const respBody = pm.response.json();\r",
									"    pm.environment.set(\"contactId\", respBody.contact.id);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Edited\",\r\n    \"lastName\": \"Curie\",\r\n    \"email\": \"marie67@gmail.com\",\r\n    \"phone\": \"+1 800 200 300\",\r\n    \"comments\": \"Old friend\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contacts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Change existing contact name\",  () => {\r",
									"\tpm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Sofia\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/contacts/id ",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contacts",
								"id "
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/contacts/{{contactId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}